# Déploiement configuré pour créer et gérer l'application restaurantapp dans un environnement Kubernetes
apiVersion: apps/v1
kind: Deployment
metadata:
  name: restaurantapp
  labels:
    app: restaurantapp
spec:
  replicas: 1 # Définit le nombre de répliques de l'application à maintenir
  selector:
    matchLabels:
      app: restaurantapp # Sélectionne les pods basés sur ce label pour le déploiement
  template: # Définit le template utilisé pour créer les pods
    metadata:
      labels:
        app: restaurantapp
    spec:
      containers:
        - name: restaurantapp # Nom du conteneur
<<<<<<< HEAD
          image: elfn/restaurant-srv:latest.10 # Image Docker à utiliser pour le conteneur
=======
          image: elfn/restaurant-srv:9
>>>>>>> 5d17a1dc3b22dd0301fb8751e41d5dea835842bf
          imagePullPolicy: Always # Politique de téléchargement de l'image
          ports:
            - containerPort: 9091 # Port sur lequel le conteneur écoute
              hostPort: 9091
          env: # Variables d'environnement pour le conteneur
            - name: SPRING_DATASOURCE_USERNAME # Nom d'utilisateur de la base de données
              valueFrom:
                secretKeyRef:
                  name: secret # Référence à un secret Kubernetes pour le nom d'utilisateur
                  key: mysql-username
            - name: SPRING_DATASOURCE_PASSWORD # Mot de passe de la base de données
              valueFrom:
                secretKeyRef:
                  name: secret # Référence à un secret Kubernetes pour le mot de passe
                  key: mysql-password
            - name: SPRING_DATASOURCE_URL # URL de la base de données
              valueFrom:
                configMapKeyRef:
                  name: configmap # Référence à une ConfigMap Kubernetes pour l'URL
                  key: restaurantdb_url
---
# Service configuré pour exposer l'application restaurantapp à l'extérieur ou à d'autres composants du cluster
apiVersion: v1
kind: Service
metadata:
  name: restaurant-service
spec:
  ports:
    - protocol: TCP
      port: 9091 # Port d'exposition du service
      targetPort: 9091 # Port cible du pod à rediriger
  selector:
    app: restaurantapp # Sélectionne les pods à exposer basés sur ce label
